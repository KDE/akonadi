@PACKAGE_INIT@

set_and_check(AKONADI_DBUS_INTERFACES_DIR  "@PACKAGE_AKONADI_DBUS_INTERFACES_INSTALL_DIR@")
set_and_check(AKONADI_INCLUDE_DIR          "@PACKAGE_AKONADI_INCLUDE_DIR@")

# The directory where akonadi-xml.xsd and kcfg2dbus.xsl are installed
set(KF5Akonadi_DATA_DIR "@PACKAGE_KF5Akonadi_DATA_DIR@")

# set the directories
if(NOT AKONADI_INSTALL_DIR)
   set(AKONADI_INSTALL_DIR "@CMAKE_INSTALL_PREFIX@")
endif(NOT AKONADI_INSTALL_DIR)
include(CMakeFindDependencyMacro)
find_dependency(KF5Config "@KF5_MIN_VERSION@")
find_dependency(KF5ConfigWidgets "@KF5_MIN_VERSION@")
find_dependency(KF5CoreAddons "@KF5_MIN_VERSION@")
find_dependency(KF5ItemModels "@KF5_MIN_VERSION@")
find_dependency(KF5XmlGui "@KF5_MIN_VERSION@")

find_dependency(Qt5Core "@QT_REQUIRED_VERSION@")
find_dependency(Qt5DBus "@QT_REQUIRED_VERSION@")
find_dependency(Qt5Gui "@QT_REQUIRED_VERSION@")
find_dependency(Qt5Network "@QT_REQUIRED_VERSION@")
find_dependency(Qt5Widgets "@QT_REQUIRED_VERSION@")
find_dependency(Qt5Xml "@QT_REQUIRED_VERSION@")

if(BUILD_TESTING)
    # Link targets required by KF5AkonadiMacros.cmake
    find_dependency(KF5KIO "@KF5_MIN_VERSION@")
    find_dependency(Qt5Test "@QT_REQUIRED_VERSION@")
endif()

set(Boost_NO_BOOST_CMAKE ON)
find_dependency(Boost "@Boost_MINIMUM_VERSION@")
# Reset Boost_NO_BOOST_CMAKE now that we found what we need
unset(Boost_NO_BOOST_CMAKE)

include(${CMAKE_CURRENT_LIST_DIR}/KF5AkonadiTargets.cmake)
include(${CMAKE_CURRENT_LIST_DIR}/KF5AkonadiMacros.cmake)

@PACKAGE_SETUP_AUTOMOC_VARIABLES@
